openapi: 3.0.4
info:
  title: Swagger Blobs - OpenAPI 3.0
  description: |-
    This is the API specification for the Blobs API. The Blobs API allows you to manage your blobs, including creating, updating, and deleting them. You can also retrieve information about your blobs and their associated data.
    Blobs are related to Blibs. Blibs contain privacy sensitive information.

  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: blob
    description: Everything related to blobs
  - name: blib
    description: Everything related to blibs
paths:
  /blobs:
    put:
      tags:
        - blob
      summary: Update an existing blob.
      description: Update an existing blob by Id.
      operationId: updateBlob
      requestBody:
        description: Update an existent blob
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blob'
          application/xml:
            schema:
              $ref: '#/components/schemas/Blob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blob'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blob'
            application/xml:
              schema:
                $ref: '#/components/schemas/Blob'
        '400':
          description: Invalid ID supplied
        '404':
          description: Blob not found
        '422':
          description: Validation exception
        default:
          description: Unexpected error
    post:
      tags:
        - blob
      summary: Add a new blob.
      description: Add a new blob.
      operationId: addBlob
      requestBody:
        description: Create a new blob
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blob'
          application/xml:
            schema:
              $ref: '#/components/schemas/Blob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blob'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blob'
            application/xml:
              schema:
                $ref: '#/components/schemas/Blob'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        default:
          description: Unexpected error
    get:
        tags:
            - blob
        summary: Get all blobs.
        description: Get all blobs.
        operationId: getBlobs
        responses:
          '200':
            description: successful operation
            content:
                application/json:
                  schema:
                      type: array
                      items:
                      $ref: '#/components/schemas/Blob'
                application/xml:
                  schema:
                      type: array
                      items:
                      $ref: '#/components/schemas/Blob'
          '400':
            description: Invalid status value
          default:
            description: Unexpected error
  /blobs{id}:
    get:
      tags:
        - blob
      summary: Finds Blobs
      description: A single blob ID must be provided in the path.
      operationId: findBlobByID
      parameters:
        - name: id
          in: path
          description: ID of blob to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Blob'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Blob'
        '400':
          description: Invalid status value
        default:
          description: Unexpected error
    delete:
      tags:
        - blob
      summary: Deletes a blob.
      description: Delete a blob.
      operationId: deleteBlob
      parameters:
        - name: id
          in: path
          description: ID of blob to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Pet deleted
        '400':
          description: Invalid pet value
        default:
          description: Unexpected error
      security:
        - petstore_auth:
            - write:pets
            - read:pets
components:
  schemas:
    Blob:
      required:
        - name
        - photo
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: blobbie
        photo:
          type: string
        status:
          type: string
          description: Blob status
          enum:
            - alive
            - melting
            - pancake
